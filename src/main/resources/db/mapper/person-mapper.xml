<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nl.capaxit.mybatisexamples.common.mappers.PersonMapper">
    <resultMap id="personResultMap" type="person">
        <id column="id" property="id"/>
        <result column="firstname" property="firstName"/>
        <result column="lastname" property="lastName"/>
    </resultMap>
    <select id="retrieveAllPersons" resultMap="personResultMap" fetchSize="100">
        SELECT
            id,
            firstname,
            lastname
        FROM persons;
    </select>
    <resultMap id="personFullResultMap" type="person">
        <id column="person_id" property="id"/>
        <result column="person_firstname" property="firstName"/>
        <result column="person_lastname" property="lastName"/>
        <collection property="addresses" foreignColumn="person_id" column="address_id" javaType="address">
            <id column="address_id" property="id"/>
            <result column="address_street" property="street"/>
            <result column="address_city" property="city"/>
        </collection>
    </resultMap>
    <select id="retrieveAllIncludingAddresses" resultMap="personFullResultMap">
        SELECT
            <include refid="personAndAddressColumns"/>
        FROM persons p
            LEFT JOIN addresses a ON p.id = a.person_id
    </select>
    <select id="find" resultMap="personFullResultMap">
        SELECT
        <include refid="personAndAddressColumns"/>
        FROM persons p
        LEFT JOIN addresses a ON p.id = a.person_id
        <where>
            <if test="searchSpec.firstName != null">
                AND p.firstName = #{searchSpec.firstName}
            </if>
            <if test="searchSpec.lastName != null">
                AND p.lastName = #{searchSpec.lastName}
            </if>
        </where>
    </select>
    <sql id="personAndAddressColumns">
        p.id        AS person_id,
        p.firstname AS person_firstname,
        p.lastname  AS person_lastname,
        a.id        AS address_id,
        a.street    AS address_street,
        a.city      AS address_city
    </sql>
    <insert id="insert" useGeneratedKeys="true" keyProperty="person.id" keyColumn="id">
        insert into persons(firstname, lastname) VALUES(#{person.firstName}, #{person.lastName})
    </insert>
    <insert id="insertAddress" useGeneratedKeys="true" keyProperty="address.id" keyColumn="id">
        insert into addresses(city, street, person_id) VALUES(#{address.street}, #{address.city}, #{personId})
    </insert>
    <delete id="delete">
        delete from persons
        where id = #{personId}
    </delete>
</mapper>